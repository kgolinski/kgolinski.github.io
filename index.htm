<!DOCTYPE html>
<html>
<head>
<meta charset="utf8">
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="viewport" content="user-scalable=no, width=device-width" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
<meta name="apple-mobile-web-app-capable" content="yes">
<style type="text/css">
* { margin:0; padding:0; }
html, body { width:100%; height:100%; }
canvas { display:block; }
</style>
<title>arrows</title>
<script type="text/javascript">
/**
 * @author mrdoob / http://mrdoob.com/
 */

var Stats = function () {
	var startTime = Date.now(), prevTime = startTime;
	var ms = 0, msMin = Infinity, msMax = 0;
	var fps = 0, fpsMin = Infinity, fpsMax = 0;
	var frames = 0, mode = 0;
	var container = document.createElement( 'div' );
	container.id = 'stats';
	container.addEventListener( 'mousedown', function ( event ) { event.preventDefault(); setMode( ++ mode % 2 ) }, false );
	container.style.cssText = 'width:80px;opacity:0.9;cursor:pointer';
	var fpsDiv = document.createElement( 'div' );
	fpsDiv.id = 'fps';
	fpsDiv.style.cssText = 'padding:0 0 3px 3px;text-align:left;background-color:#002';
	container.appendChild( fpsDiv );
	var fpsText = document.createElement( 'div' );
	fpsText.id = 'fpsText';
	fpsText.style.cssText = 'color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px';
	fpsText.innerHTML = 'FPS';
	fpsDiv.appendChild( fpsText );
	var fpsGraph = document.createElement( 'div' );
	fpsGraph.id = 'fpsGraph';
	fpsGraph.style.cssText = 'position:relative;width:74px;height:30px;background-color:#0ff';
	fpsDiv.appendChild( fpsGraph );
	while ( fpsGraph.children.length < 74 ) {
		var bar = document.createElement( 'span' );
		bar.style.cssText = 'width:1px;height:30px;float:left;background-color:#113';
		fpsGraph.appendChild( bar );
	}
	var msDiv = document.createElement( 'div' );
	msDiv.id = 'ms';
	msDiv.style.cssText = 'padding:0 0 3px 3px;text-align:left;background-color:#020;display:none';
	container.appendChild( msDiv );
	var msText = document.createElement( 'div' );
	msText.id = 'msText';
	msText.style.cssText = 'color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px';
	msText.innerHTML = 'MS';
	msDiv.appendChild( msText );
	var msGraph = document.createElement( 'div' );
	msGraph.id = 'msGraph';
	msGraph.style.cssText = 'position:relative;width:74px;height:30px;background-color:#0f0';
	msDiv.appendChild( msGraph );
	while ( msGraph.children.length < 74 ) {
		var bar = document.createElement( 'span' );
		bar.style.cssText = 'width:1px;height:30px;float:left;background-color:#131';
		msGraph.appendChild( bar );
	}
	var setMode = function ( value ) {
		mode = value;
		switch ( mode ) {
			case 0:
				fpsDiv.style.display = 'block';
				msDiv.style.display = 'none';
				break;
			case 1:
				fpsDiv.style.display = 'none';
				msDiv.style.display = 'block';
				break;
		}
	}
	var updateGraph = function ( dom, value ) {
		var child = dom.appendChild( dom.firstChild );
		child.style.height = value + 'px';
	}
	return {
		REVISION: 11,
		domElement: container,
		setMode: setMode,
		begin: function () {
			startTime = Date.now();
		},
		end: function () {
			var time = Date.now();
			ms = time - startTime;
			msMin = Math.min( msMin, ms );
			msMax = Math.max( msMax, ms );
			msText.textContent = ms + ' MS (' + msMin + '-' + msMax + ')';
			updateGraph( msGraph, Math.min( 30, 30 - ( ms / 200 ) * 30 ) );
			frames ++;
			if ( time > prevTime + 1000 ) {
				fps = Math.round( ( frames * 1000 ) / ( time - prevTime ) );
				fpsMin = Math.min( fpsMin, fps );
				fpsMax = Math.max( fpsMax, fps );
				fpsText.textContent = fps + ' FPS (' + fpsMin + '-' + fpsMax + ')';
				updateGraph( fpsGraph, Math.min( 30, 30 - ( fps / 100 ) * 30 ) );
				prevTime = time;
				frames = 0;
			}
			return time;
		},
		update: function () {
			startTime = this.end();
		}
	}
};
/**
 * Provides requestAnimationFrame in a cross browser way.
 * @author paulirish / http://paulirish.com/
 */

if ( !window.requestAnimationFrame ) {

	window.requestAnimationFrame = ( function() {

		return window.webkitRequestAnimationFrame ||
		window.mozRequestAnimationFrame ||
		window.oRequestAnimationFrame ||
		window.msRequestAnimationFrame ||
		function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {

			window.setTimeout( callback, 1000 / 60 );

		};

	} )();

}

var canvas,ctx,stats,mouse,
	background = "rgba(80, 80, 80, 1)",
	stroke = "rgba(255, 255, 255, 1)",
	width=400,
	height=400,
	distance = 20,
	margin = 200;
window.onload = setup;
function setup() {

	canvas = document.getElementById("canvas");
	ctx = canvas.getContext('2d');
	
	window.addEventListener('resize', resize);
	window.addEventListener('mousemove',mouseMove); 
	resize();
	
	mouse = {x:0,y:0};
	//ctx.lineWidth = 0.5;
	
	stats = new Stats();
	stats.domElement.style.position = 'absolute';
	stats.domElement.style.right = '0px';
	stats.domElement.style.top = '0px';
	document.body.appendChild( stats.domElement );
	
	draw();
}
function drawArrow(x,y) {
	
	//translate, rotate
	ctx.strokeStyle = stroke;
	ctx.fillStyle = "black";
	
	
	ctx.save();
	ctx.translate(x,y);
	ctx.rotate(Math.atan2(y-mouse.y+window.innerHeight/2.0-height/2.0,x-mouse.x+window.innerWidth/2.0-width/2.0)-Math.PI/2.0);
	ctx.beginPath();

	ctx.moveTo(-1,-7);
	ctx.lineTo(3,3);
	ctx.lineTo(0,2);
	ctx.lineTo(0,8);
	ctx.lineTo(-2,8);
	ctx.lineTo(-2,2);
	ctx.lineTo(-5,3);
	ctx.closePath();
	
	ctx.fill();
	ctx.stroke();
	ctx.restore();
}
function draw(){
	requestAnimationFrame(draw);
	render();
	stats.update();
}
function render() {
	clear();
	ctx.save();
	ctx.translate(window.innerWidth/2.0-width/2.0, window.innerHeight/2.0-height/2.0)
	for(var y=0;y<=height;y+=distance){
		for(var x=0;x<=width;x+=distance){
			drawArrow(x,y);
		}
	}
	ctx.restore();
}

function resize() {
	document.getElementById("canvas").setAttribute('width', window.innerWidth);
	document.getElementById("canvas").setAttribute('height', window.innerHeight);
	//width = canvas.width;
	//height = canvas.height;
}
function mouseMove(e) {
	e = e || window.event;
	mouse = {x:e.pageX,y:e.pageY};
}

function clear() {
	ctx.fillStyle = background;
	ctx.fillRect(0, 0, window.innerWidth,  window.innerHeight);
}
</script>
</head>
<body>
<div id="fps"></div>
<canvas id="canvas"></canvas>
</body>
</html>	